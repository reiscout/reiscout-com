<?php
/**
 * @file
 * Drupal needs this blank file.
 */

function reiscout_address_init() {
  $modulePath = drupal_get_path('module', 'reiscout_address');

  drupal_add_css($modulePath . '/reiscout_address.css');
  drupal_add_js('https://maps.googleapis.com/maps/api/js?libraries=places');
  drupal_add_js($modulePath . '/geocomplete/jquery.geocomplete.min.js');
  drupal_add_js($modulePath . '/reiscout_address.js');
}

/**
 * Implements hook_services_resources().
 */
function reiscout_address_services_resources() {
  $file = array(
    'type'   => 'inc',
    'module' => 'reiscout_address',
    'name'   => 'reiscout_address.resource'
  );

  $resource = array(
    'addressapi' => array(
      'actions' => array(
        'setview' => array(
          'help' => t('Save view address click statistics.'),
          'callback' => 'reiscout_address_resource_action_view_address',
          'access callback' => 'reiscout_address_resource_access',
          'file' => $file,
          'args' => array(
            array(
              'name' => 'nid',
              'optional' => FALSE,
              'source' => array('data' => 'nid'),
              'type' => 'int',
            ),
          ),
        )
      ),
    ),
  );

  return $resource;
}

/**
 * Access callback for addressapi:setview action.
 */
function reiscout_address_resource_access($nid) {
  $node = node_load($nid);

  return ($node && $node->type === 'property' && !user_is_anonymous() && $node->uid !== $GLOBALS['user']->uid);
}

/**
 * Implements hook_entity_load().
 */
function reiscout_address_entity_load($entities, $type) {
  if ($type === 'node' && !user_is_anonymous()) {
    foreach ($entities as $entity) {
      if ($entity->type === 'property') {
        // Set $entity->_flag_is_user_has_view to TRUE for property node is user its author or has flagged the node.
        //  it is used by mobile App, see reiscout_address.js app module.
        //$entity->_flag_is_user_has_view = ($entity->uid === $GLOBALS['user']->uid || reiscout_address_user_has_view($entity->nid));
        // @todo: replace it to _purchased_property_info

        // this is a tmp placeholder to do not brake mApp part.
        $entity->_flag_is_user_has_view = true;

        // We will use this data in mobile app to fill some of the fields that related to field_address field.
        if (isset($entity->field_address[LANGUAGE_NONE][0])) {
          $data = unserialize($entity->field_address[LANGUAGE_NONE][0]['data']);
          // Prepare data
          unset($data['zoom']);
          $entity->field_address[LANGUAGE_NONE][0]['data_json'] = json_encode($data);
        }
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function reiscout_address_form_property_node_form_alter(&$form, &$form_state, $form_id) {
  $fieldName = 'field_address_text';
  if (isset($form[$fieldName])) {
    $language = (empty($form[$fieldName]['#language']) ? LANGUAGE_NONE : $form[$fieldName]['#language']);
    
    if (isset($form[$fieldName][$language])) {
      foreach ($form[$fieldName][$language] as $delta => &$field) {
        if (!isset($field['value'])) {
          continue;
        }

        $element = &$field['value'];

        if (!isset($element['#field_suffix'])) {
          $element['#field_suffix'] = '';
        }

        $idPrefix = 'address-clear-button';
        $idSuffix = drupal_html_id(implode('-', [$fieldName, $language, $delta, 'value']));
        $link = l(t('Clear Address'), current_path(), [
          'fragment' => $idPrefix . '-' . $idSuffix,
          'attributes' => [
            'id' => $idPrefix . '-' . $idSuffix,
            'class' => [$idPrefix],
            'data-input-id' => 'edit-' . $idSuffix,
          ],
        ]);
        
        $element['#field_suffix'] = $link . $element['#field_suffix'];

        if (!isset($element['#attributes'])) {
          $element['#attributes'] = array();
        }

        if (!isset($element['#attributes']['class'])) {
          $element['#attributes']['class'] = array();
        }

        $element['#attributes']['class'][] = 'address-autocomplete';

        unset($element, $field);
      }
    }
  }
}

/*
 * this is a dummy func to escape erros on mApp.
 * remove it when it is not needed anymore
 */
function reiscout_address_user_has_view ($arg) {

}

/*
 * this is a dummy func to escape erros on mApp.
 * remove it when it is not needed anymore
 */
function reiscout_address_set_view ($arg) {
  
}
