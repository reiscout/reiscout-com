<?php

/**
 * @file
 * Reiscout Send Letters - Display buttons and make control over points to send letters.
 */

// Define constants
const TERM_ID_POINTS_SEND_LETTERS = 2;


/**
 * Implements hook_menu().
 */
function reiscout_send_letters_menu () {

  $items['send_letter/%'] = array(
    'title' => 'Send a letter to Property Owner.',
    'page callback' => 'reiscout_send_letters_send_letter_callback',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Page callback for send_letter/%.
 */
function reiscout_send_letters_send_letter_callback($nid) {
  global $user;

  // Call letters API initialization (see reiscout_send_letters.module)
  $output = reiscout_lob_api_initialize($nid);
  drupal_set_message($output);

  // Decrease points by one
  $params = array(
    'uid' => $user->uid,
    'points' => -1,
    'tid' => TERM_ID_POINTS_SEND_LETTERS,
    'operation' => 'Used 1 point to send letter.',
  );
  userpoints_userpointsapi($params);

  // Return to previous page
  drupal_goto();
}


/**
 * Implements hook_node_view
 *
 */
function reiscout_send_letters_node_view($node, $view_mode, $langcode) {
  if ($view_mode == 'full' && $node->type == 'property') {
    if (!user_is_anonymous()) {
      global $user;
      $link = '';

      // Prepare HTML-container for action buttons
      if (!isset($node->content['commerce-buttons'])) {
        $node->content['commerce-buttons'] = array(
          '#prefix' => '<div class="commerce-buttons">',
          '#suffix' => '</div>',
          '#markup' => '',
          '#weight' => -1,
        );
      }

      $points = userpoints_get_current_points($user->uid, TERM_ID_POINTS_SEND_LETTERS);
      $button_name = 'Send a letter to Property Owner' . ' (' . $points . ' points left)';
      $callback_path = 'send_letter/' . $node->nid . '/';
      $rules_buy_link = 'buy_sending_letter';

      $destination = drupal_get_destination();

      // If user have points for current action
      if ($points > 0) {
        $link = l($button_name, url($callback_path, array('html' => TRUE, 'query' => $destination, 'absolute' => TRUE)));
        $node->content['commerce-buttons']['#markup'] .= $link;
      }
      // If user have not points
      else {
        $parameters = array();
        // Add link/button via rules to buy points as commerce product
        $rendered_link = rules_link_render($rules_buy_link, $node->nid, $destination, $parameters);
        if (!empty($rendered_link)) {
          $link =  render($rendered_link);
          $node->content['commerce-buttons']['#markup'] .= $link;
        }
      }
    }
  }
}
