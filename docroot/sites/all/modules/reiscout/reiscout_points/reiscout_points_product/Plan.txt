Points products

We need to have common API and data structures to track what and when was purchased for points by which user.
We could rely on commerce data structures
Or provide an our own

We could rely on commerce data structures:
- create a set of products could be purchased for points
- when user buy a product we create an order with line item and transactions
- later check does user been purchased that product before

Implementation:
• add a special field to product indicating that product could be purchased for points
• add transaction type to track points transactions (2h)
• add API func to make a sell: create order with line items and transactions in 'complete' status (2h)
• add API func to check does particular product been purchased by particular user (2h)


Integration
• update all the prop products with new fields values (1h)
• create a product for postcard

Pros:
• agility
• leveraging well developed commerce ecosystem
• familiar products system with UI and fieldable entity
• using time proven agile data structure
• no need to update props purchasing system
• single system for all kind of products

Cons:
   no


hook_reiscout_points_product_info should be updated:
rename to hook_reiscout_points_product_type_info
add key 'commerce_product_type'

reiscout_points_product_get_buy_form should be updated:
up param $product_id =>> $product_sku

prices should be moved to products

I want to update current system
- chain point_product_type with commerce product type so to have a commerce product type per point_product type
- pass to reiscout_points_product_get_buy_form() commerce SKU
- keep points price in product
