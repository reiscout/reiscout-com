<?php

/**
 * @file
 * Implements miscellaneous hooks.
 */

/**
 * Implements hook_admin_menu_output_alter().
 *
 * Prevents 'User counts' block from displaying to a user
 * which has not an administrator user role.
 */
function reiscout_misc_admin_menu_output_alter(&$content) {
  if (isset($content['users'])) {
    $role_admin = user_role_load_by_name('administrator');
    if (!user_has_role($role_admin->rid)) {
      unset($content['users']);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function reiscout_misc_form_property_node_form_alter(&$form, &$form_state, $form_id) {
  $form['#attached']['css'][] = array(
    'data' => '#edit-field-owner-postal-address .form-item-field-owner-postal-address-und-0-country {display: none}',
    'type' => 'inline',
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function reiscout_misc_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  $form['#attached']['css'][] = array(
    'data' => '#edit-field-user-postal-address .form-item-field-user-postal-address-und-0-country {display: none}',
    'type' => 'inline',
  );

  $form['#validate'][] = 'reiscout_misc_user_profile_form_validate';
}

/**
 * Form validation handler for 'user_profile_form' form.
 *
 * Validates 'Phone Number' and 'Website' fields.
 */
function reiscout_misc_user_profile_form_validate(&$form, &$form_state, $form_id) {
  $field_user_phone_number = $form_state['values']['field_user_phone_number'][LANGUAGE_NONE][0]['value'];
  $field_user_website = $form_state['values']['field_user_website'][LANGUAGE_NONE][0]['value'];

  if ($field_user_phone_number) {
    if (!preg_match('!\d{2,}!', $field_user_phone_number)) {
      $t_args = array('%phone' => $field_user_phone_number);
      form_set_error('field_user_phone_number', t('The phone number %phone is not valid.', $t_args));
    }
  }

  if ($field_user_website) {
    if (!preg_match('!.+?\..{2,}!', $field_user_website)) {
      $t_args = array('%url' => $field_user_website);
      form_set_error('field_user_website', t('The website URL %url is not valid.', $t_args));
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function reiscout_misc_form_node_delete_confirm_alter(&$form, &$form_state, $form_id) {
  if ('property' == $form['#node']->type) {
    $form['#submit'][] = 'reiscout_misc_node_delete_confirm_validate';
  }
}

/**
 * Form submission handler for 'node_delete_confirm' form.
 *
 * Redirect a user to 'My Properties' page after a node deleting.
 */
function reiscout_misc_node_delete_confirm_validate(&$form, &$form_state) {
  $form_state['redirect'] = 'my-properties';
}

/**
 * Implements hook_node_presave().
 */
function reiscout_misc_node_presave($node) {
  if ('property' != $node->type) {
    return;
  }

  $node->field_address[LANGUAGE_NONE][0]['thoroughfare'] = _reiscout_misc_standardize_address_thoroughfare($node->field_address[LANGUAGE_NONE][0]['thoroughfare']);

  if ($node->field_owner_postal_address[LANGUAGE_NONE][0]['thoroughfare']) {
    $node->field_owner_postal_address[LANGUAGE_NONE][0]['thoroughfare'] = _reiscout_misc_standardize_address_thoroughfare($node->field_owner_postal_address[LANGUAGE_NONE][0]['thoroughfare']);
  }
}

/**
 * Implements hook_user_presave().
 */
function reiscout_misc_user_presave(&$edit, $account, $category) {
  if ($edit['field_user_postal_address'][LANGUAGE_NONE][0]['thoroughfare']) {
    $edit['field_user_postal_address'][LANGUAGE_NONE][0]['thoroughfare'] = _reiscout_misc_standardize_address_thoroughfare($edit['field_user_postal_address'][LANGUAGE_NONE][0]['thoroughfare']);
  }
}

/**
 * Standardizes an address thoroughfare.
 *
 * @todo: Use some service, f.e. USPS, to validate and standardize addresses.
 */
function _reiscout_misc_standardize_address_thoroughfare($thoroughfare) {
  $from = array(
    '! Street$!i',
    '! Road$!i',
    '! Avenue$!i',
    '! Boulevard$!i',
    '! Lane$!i',
    '! Drive$!i',
    '! Place$!i',
    '! Court$!i',
    '! Terrace$!i',
    '! Circle$!i',
    '! North !i',
    '! South !i',
    '! East !i',
    '! West !i',
    '! Northeast !i',
    '! Northwest !i',
    '! Southeast !i',
    '! Southwest !i',
    '! North$!i',
    '! South$!i',
    '! East$!i',
    '! West$!i',
    '! Northeast$!i',
    '! Northwest$!i',
    '! Southeast$!i',
    '! Southwest$!i',
  );

  $to = array(
    ' St',
    ' Rd',
    ' Ave',
    ' Blvd',
    ' Ln',
    ' Dr',
    ' Pl',
    ' Ct',
    ' Ter',
    ' Cir',
    ' N ',
    ' S ',
    ' E ',
    ' W ',
    ' NE ',
    ' NW ',
    ' SE ',
    ' SW ',
    ' N',
    ' S',
    ' E',
    ' W',
    ' NE',
    ' NW',
    ' SE',
    ' SW',
  );

  return preg_replace($from, $to, $thoroughfare);
}

/**
 * Checks if the current user has 'administrator' role.
 */
function _reiscout_misc_user_has_administrator_role() {
  $role_admin = user_role_load_by_name('administrator');
  return user_has_role($role_admin->rid);
}
